pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'sonarqube' 
    }

    tools {
        jdk 'JDK17'  
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo 'Cloning repository...'
                    git url: 'https://github.com/harini1810/pipeline.git', branch: 'main'
                }
            }
        }

        stage('Compile') {
            steps {
                script {
                    echo 'Compiling Java files...'
                    bat '''
                        mkdir -p target
                        javac -d target src/hello.java
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    echo 'Running SonarQube analysis...'
                    withSonarQubeEnv('SonarQube') {
                        bat '''
                            sonar-scanner -Dsonar.projectKey=pipeline \
                                          -Dsonar.sources=. \
                                          -Dsonar.java.binaries=target \
                                          -Dsonar.host.url=http://localhost:9000 \
                                          -Dsonar.login=sqp_c18f3a48474b177d06939a7fa065a08cfa049265
                        '''
                    }
                }
            }
        }

        stage('Run') {
            steps {
                script {
                    echo 'Running the Java program...'
                    bat '''
                        java -cp target hello
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    echo 'Checking SonarQube Quality Gate...'
                    timeout(time: 1, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed. Check logs for details.'
        }
    }
}
